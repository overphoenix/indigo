// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package bsky

// schema: app.bsky.unspecced.handleAgeAssuranceComplete

import (
	"context"

	"github.com/bluesky-social/indigo/lex/util"
)

// UnspeccedHandleAgeAssuranceComplete_Output is the output of a app.bsky.unspecced.handleAgeAssuranceComplete call.
type UnspeccedHandleAgeAssuranceComplete_Output struct {
	// status: The computed status of the age assurance process.
	Status string `json:"status" cborgen:"status"`
}

// UnspeccedHandleAgeAssuranceComplete calls the XRPC method "app.bsky.unspecced.handleAgeAssuranceComplete".
//
// externalPayload: Additional metadata provided when initiating age assurance.
// signature: SHA256 HMAC signature of the status and externalPayload, separated by a colon (:), and signed with the facilitating service's private key.
// status: The status of the age assurance process.
func UnspeccedHandleAgeAssuranceComplete(ctx context.Context, c util.LexClient, externalPayload string, signature string, status string) (*UnspeccedHandleAgeAssuranceComplete_Output, error) {
	var out UnspeccedHandleAgeAssuranceComplete_Output

	params := map[string]interface{}{}
	if externalPayload != "" {
		params["externalPayload"] = externalPayload
	}
	if signature != "" {
		params["signature"] = signature
	}
	if status != "" {
		params["status"] = status
	}
	if err := c.LexDo(ctx, util.Query, "", "app.bsky.unspecced.handleAgeAssuranceComplete", params, nil, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
