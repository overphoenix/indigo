// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package bsky

// schema: app.bsky.unspecced.handleAgeAssuranceEvent

import (
	"context"

	"github.com/bluesky-social/indigo/lex/util"
)

// UnspeccedHandleAgeAssuranceEvent_Input is the input argument to a app.bsky.unspecced.handleAgeAssuranceEvent call.
type UnspeccedHandleAgeAssuranceEvent_Input struct {
	// environmentId: The environment identifier, in UUID format.
	EnvironmentId *string `json:"environmentId,omitempty" cborgen:"environmentId,omitempty"`
	// name: The name of the event being reported, e.g., 'adult-verified'.
	Name *string `json:"name,omitempty" cborgen:"name,omitempty"`
	// orgId: The account identifier of our organization, in UUID format.
	OrgId   *string                                   `json:"orgId,omitempty" cborgen:"orgId,omitempty"`
	Payload *UnspeccedHandleAgeAssuranceEvent_Payload `json:"payload,omitempty" cborgen:"payload,omitempty"`
	// productId: The product identifier, in UUID format.
	ProductId *string `json:"productId,omitempty" cborgen:"productId,omitempty"`
	// time: The timestamp of the event. Currently in ISO 8601 format, but left open for future flexibility.
	Time *string `json:"time,omitempty" cborgen:"time,omitempty"`
}

// UnspeccedHandleAgeAssuranceEvent_Output is the output of a app.bsky.unspecced.handleAgeAssuranceEvent call.
type UnspeccedHandleAgeAssuranceEvent_Output struct {
	// ack: Whether the event was handled or not.
	Ack string `json:"ack" cborgen:"ack"`
}

// UnspeccedHandleAgeAssuranceEvent_Payload is a "payload" in the app.bsky.unspecced.handleAgeAssuranceEvent schema.
//
// The payload of the event.
type UnspeccedHandleAgeAssuranceEvent_Payload struct {
	// externalPayload: JSON string containing the external payload passed in when initiating the age assurance process.
	ExternalPayload *string `json:"externalPayload,omitempty" cborgen:"externalPayload,omitempty"`
	// parentEmail: Misnomer: the email address of the user that was processed.
	ParentEmail *string                                         `json:"parentEmail,omitempty" cborgen:"parentEmail,omitempty"`
	Status      *UnspeccedHandleAgeAssuranceEvent_PayloadStatus `json:"status,omitempty" cborgen:"status,omitempty"`
}

// UnspeccedHandleAgeAssuranceEvent_PayloadStatus is a "payloadStatus" in the app.bsky.unspecced.handleAgeAssuranceEvent schema.
//
// The status property returned on the payload.
type UnspeccedHandleAgeAssuranceEvent_PayloadStatus struct {
	// transactionId: The transaction ID of the age assurance process.
	TransactionId *string `json:"transactionId,omitempty" cborgen:"transactionId,omitempty"`
	// verified: Whether the user was verified as an adult or not.
	Verified *bool `json:"verified,omitempty" cborgen:"verified,omitempty"`
}

// UnspeccedHandleAgeAssuranceEvent calls the XRPC method "app.bsky.unspecced.handleAgeAssuranceEvent".
func UnspeccedHandleAgeAssuranceEvent(ctx context.Context, c util.LexClient, input *UnspeccedHandleAgeAssuranceEvent_Input) (*UnspeccedHandleAgeAssuranceEvent_Output, error) {
	var out UnspeccedHandleAgeAssuranceEvent_Output
	if err := c.LexDo(ctx, util.Procedure, "application/json", "app.bsky.unspecced.handleAgeAssuranceEvent", nil, input, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
